---
title: test_doc
date: April 12, 2023
author:
  - name: Janick Weberpals, RPh, PhD
    corresponding: true
    orcid: 0000-0003-0404-7394
    email: jweberpals@bwh.harvard.edu
    url: janickweberpals.github.io
    affiliations:
      - name: Division of Pharmacoepidemiology and Pharmacoeconomics, Department of Medicine, Brigham and Women's Hospital, Harvard Medical School
        address: 1620 Tremont Street
        city: Boston
        state: MA
        postal-code: 02120
        
format:
  pdf: 
    documentclass: article
    prefer-html: true
  beamer: 
    prefer-html: true
  html: default
  revealjs: default
  docx:
    documentclass: article
    df-print: paged
    prefer-html: true
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
library(dplyr)
library(gt)
library(tableone)
library(kableExtra)

devtools::load_all()
```

\newpage

# `format_table` 

## Normal data

```{r}
data <- dplyr::sample_n(iris, 10)

format_table(
  data = data,
  caption = "Normal data table"
  )
```

## Table 1 with `format_table`

```{r}
tbl1 <- tableone::CreateTableOne(
  data = iris
  )

format_table(
  data = tbl1,
  caption = "Table 1 example"
  )
```

## Long table

```{r}
format_table(
  data = iris,
  longtable = TRUE,
  caption = "Long table"
  )
```

::: {.content-visible when-format="html"}

# `format_datatable` 

## Datatable without column filter

```{r}
#| label: tbl-dr-table
#| tbl-cap: "DT caption test."
data %>% 
  format_datatable(caption = "Datatable test.")
```

## Datatable without column filter - small

```{r}
#| label: tbl-dr-table_small
#| tbl-cap: "DT caption test small."
data %>% 
  format_datatable(caption = "Datatable test.") %>% 
   DT::formatStyle(columns = colnames(iris), fontSize = '75%')
```

## Datatable with column filter

```{r}
#| label: tbl-dr-table2
#| tbl-cap: "DT caption test."
data %>% 
  format_datatable(cols_show = c("Species", "Sepal.Width"), caption = "Datatable test.")
```

:::

# gt

## Normal gt table

```{r}
#| label: tbl-gt-table
#| tbl-cap: "gt caption test."
data %>% 
  gt::gt() 
```

## `format_gt` test

```{r}
#| label: tbl-gt-fromat-table
#| tbl-cap: "format gt caption test."
iris_gt <- head(iris) %>% 
  gt::gt() %>% 
  gt::tab_header(title = "gt test")

format_gt(tbl_gt = iris_gt, zoom = 3)
```
